{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport * as React from \"react\";\nimport { Field } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nvar Select = function Select(_ref) {\n  var options = _ref.options,\n      label = _ref.label,\n      name = _ref.name;\n  return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    htmlFor: name\n  }, label), React.createElement(Field, {\n    name: name,\n    render: function render(_ref2) {\n      var field = _ref2.field;\n      return React.createElement(Form.Control, _extends({}, field, {\n        as: \"select\"\n      }), options.map(function (opt, index) {\n        return React.createElement(\"option\", {\n          value: opt.id,\n          key: index\n        }, opt.name);\n      }));\n    }\n  }));\n};\n\nexport default Select;","map":{"version":3,"sources":["D:\\Projeler\\na_brno_dobry\\components\\Select\\index.tsx"],"names":["React","Field","Form","Select","options","label","name","field","map","opt","index","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAkC,QAAlC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAQA,IAAMC,MAA+B,GAAG,SAAlCA,MAAkC,OAA8B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACpE,SACE,0CACE;AAAO,IAAA,OAAO,EAAEA;AAAhB,KAAuBD,KAAvB,CADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,MAAM,EAAE;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,aACN,oBAAC,IAAD,CAAM,OAAN,eAAkBA,KAAlB;AAAyB,QAAA,EAAE,EAAC;AAA5B,UACGH,OAAO,CAACI,GAAR,CAAY,UAACC,GAAD,EAAMC,KAAN;AAAA,eACX;AAAQ,UAAA,KAAK,EAAED,GAAG,CAACE,EAAnB;AAAuB,UAAA,GAAG,EAAED;AAA5B,WACGD,GAAG,CAACH,IADP,CADW;AAAA,OAAZ,CADH,CADM;AAAA;AAFV,IAFF,CADF;AAiBD,CAlBD;;AAoBA,eAAeH,MAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Field, FieldProps } from \"formik\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport interface ISelectProps {\r\n  options: { id: string; name: string }[];\r\n  label: string;\r\n  name: string;\r\n}\r\n\r\nconst Select: React.SFC<ISelectProps> = ({ options, label, name }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field\r\n        name={name}\r\n        render={({ field }: FieldProps) => (\r\n          <Form.Control {...field} as='select'>\r\n            {options.map((opt, index) => (\r\n              <option value={opt.id} key={index}>\r\n                {opt.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n"]},"metadata":{},"sourceType":"module"}