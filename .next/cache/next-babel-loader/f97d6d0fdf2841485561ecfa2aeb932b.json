{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport Input from \"../../../components/Input\";\nimport { NewPasswordSchema } from \"./validation\";\n\nvar NewPasswordSection = function NewPasswordSection(_ref) {\n  var onChangePassword = _ref.onChangePassword;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return onChangePassword({\n                variables: {\n                  password: values.password\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Formik, {\n    initialValues: {\n      password: \"\",\n      rePassword: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: NewPasswordSchema\n  }, function (_ref3) {\n    var errors = _ref3.errors,\n        touched = _ref3.touched;\n    return React.createElement(Form, {\n      style: {\n        marginTop: 30\n      }\n    }, React.createElement(Input, {\n      name: \"password\",\n      label: \"New password\",\n      errors: errors,\n      touched: touched\n    }), React.createElement(Input, {\n      name: \"rePassword\",\n      label: \"Repeat the new password\",\n      errors: errors,\n      touched: touched\n    }), React.createElement(Button, {\n      type: \"submit\"\n    }, \"Change\"));\n  });\n};\n\nexport default NewPasswordSection;","map":{"version":3,"sources":["D:\\Projeler\\na_brno_dobry\\pages\\changePassword\\NewPasswordSection\\index.tsx"],"names":["React","Formik","Form","Button","Input","NewPasswordSchema","NewPasswordSection","onChangePassword","handleSubmit","values","variables","password","rePassword","errors","touched","marginTop"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAMA,IAAMC,kBAAgD,GAAG,SAAnDA,kBAAmD,OAEnD;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACbF,gBAAgB,CAAC;AACrBG,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,QAAQ,EAAEF,MAAM,CAACE;AADR;AADU,eAAD,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZH,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAOA,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEG,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KADjB;AAEE,IAAA,QAAQ,EAAEJ,YAFZ;AAGE,IAAA,gBAAgB,EAAEH;AAHpB,KAIG;AAAA,QAAGQ,MAAH,SAAGA,MAAH;AAAA,QAAWC,OAAX,SAAWA,OAAX;AAAA,WACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAb,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,MAAM,EAAEF,MAHV;AAIE,MAAA,OAAO,EAAEC;AAJX,MADF,EAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAC,yBAFR;AAGE,MAAA,MAAM,EAAED,MAHV;AAIE,MAAA,OAAO,EAAEC;AAJX,MAPF,EAaE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,gBAbF,CADD;AAAA,GAJH,CADF;AAwBD,CAlCD;;AAoCA,eAAeR,kBAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Input from \"../../../components/Input\";\r\nimport { NewPasswordSchema } from \"./validation\";\r\n\r\ninterface INewPasswordProps {\r\n  onChangePassword: (values: any) => Promise<any>;\r\n}\r\n\r\nconst NewPasswordSection: React.SFC<INewPasswordProps> = ({\r\n  onChangePassword\r\n}) => {\r\n  const handleSubmit = async (values: any) => {\r\n    await onChangePassword({\r\n      variables: {\r\n        password: values.password\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={{ password: \"\", rePassword: \"\" }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={NewPasswordSchema}>\r\n      {({ errors, touched }) => (\r\n        <Form style={{ marginTop: 30 }}>\r\n          <Input\r\n            name='password'\r\n            label='New password'\r\n            errors={errors}\r\n            touched={touched}\r\n          />\r\n          <Input\r\n            name='rePassword'\r\n            label='Repeat the new password'\r\n            errors={errors}\r\n            touched={touched}\r\n          />\r\n          <Button type='submit'>Change</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default NewPasswordSection;\r\n"]},"metadata":{},"sourceType":"module"}