{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _get from \"@babel/runtime-corejs2/helpers/esm/get\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport * as React from \"react\";\nimport App, { Container } from \"next/app\";\nimport { ApolloProvider } from \"react-apollo\";\nimport * as _ from \"lodash\";\nimport withApolloClient from \"../libs/Apollo/withApolloClient\";\nimport UserContextProvider from \"../libs/authentication/UserContext\";\nimport withUserData from \"../libs/authentication/withUserData\";\nimport Header from \"../components/Header\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      console.error(\"[Error]\", error); // This is needed to render errors correctly in development / production\n      // @ts-ignore\n\n      _get(_getPrototypeOf(MyApp.prototype), \"componentDidCatch\", this).call(this, error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apolloClient = _this$props.apolloClient,\n          user = _this$props.user,\n          router = _this$props.router;\n      return React.createElement(Container, null, React.createElement(ApolloProvider, {\n        client: apolloClient\n      }, React.createElement(UserContextProvider, {\n        value: user\n      }, React.createElement(Header, {\n        router: router,\n        client: apolloClient\n      }), React.createElement(Component, pageProps))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default _.flowRight(withApolloClient, withUserData)(MyApp);","map":{"version":3,"sources":["D:\\Projeler\\na_brno_dobry\\pages\\_app.tsx"],"names":["React","App","Container","ApolloProvider","_","withApolloClient","UserContextProvider","withUserData","Header","MyApp","error","errorInfo","console","props","Component","pageProps","apolloClient","user","router","ctx","getInitialProps","flowRight"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA2C,UAA3C;AACA,SAASC,cAAT,QAA+B,cAA/B;AAGA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAOMC,K;;;;;;;;;;;;;sCAUcC,K,EAAcC,S,EAA4B;AAC1DC,MAAAA,OAAO,CAACF,KAAR,CAAc,SAAd,EAAyBA,KAAzB,EAD0D,CAE1D;AACA;;AACA,mFAAwBA,KAAxB,EAA+BC,SAA/B;AACD;;;6BAEQ;AAAA,wBACsD,KAAKE,KAD3D;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,YADvB,eACuBA,YADvB;AAAA,UACqCC,IADrC,eACqCA,IADrC;AAAA,UAC2CC,MAD3C,eAC2CA,MAD3C;AAEP,aACE,oBAAC,SAAD,QACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEF;AAAxB,SACE,oBAAC,mBAAD;AAAqB,QAAA,KAAK,EAAEC;AAA5B,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEC,MAAhB;AAAwB,QAAA,MAAM,EAAEF;AAAhC,QADF,EAEE,oBAAC,SAAD,EAAeD,SAAf,CAFF,CADF,CADF,CADF;AAUD;;;;;;;;;;;;AA5B8BD,gBAAAA,S,QAAAA,S,EAAWK,G,QAAAA,G;AACpCJ,gBAAAA,S,GAAY,E;;qBAEZD,SAAS,CAACM,e;;;;;;uBACMN,SAAS,CAACM,eAAV,CAA0BD,GAA1B,C;;;AAAlBJ,gBAAAA,S;;;iDAGK;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EARSd,G;;AAgCpB,eAAeG,CAAC,CAACiB,SAAF,CACbhB,gBADa,EAEbE,YAFa,EAGbE,KAHa,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport App, { Container, AppContext } from \"next/app\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { AppProps } from \"next/app\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport withApolloClient from \"../libs/Apollo/withApolloClient\";\r\nimport UserContextProvider from \"../libs/authentication/UserContext\";\r\nimport { TUserData } from \"../libs/authentication/UserContext\";\r\nimport withUserData from \"../libs/authentication/withUserData\";\r\nimport Header from \"../components/Header\";\r\n\r\ninterface IMyAppProps extends AppProps {\r\n  apolloClient: ApolloClient<any>;\r\n  user: TUserData;\r\n}\r\n\r\nclass MyApp extends App<IMyAppProps> {\r\n  static async getInitialProps({ Component, ctx }: AppContext) {\r\n    let pageProps = {};\r\n\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n\r\n    return { pageProps };\r\n  }\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error(\"[Error]\", error);\r\n    // This is needed to render errors correctly in development / production\r\n    // @ts-ignore\r\n    super.componentDidCatch(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, apolloClient, user, router } = this.props;\r\n    return (\r\n      <Container>\r\n        <ApolloProvider client={apolloClient}>\r\n          <UserContextProvider value={user}>\r\n            <Header router={router} client={apolloClient} />\r\n            <Component {...pageProps} />\r\n          </UserContextProvider>\r\n        </ApolloProvider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default _.flowRight(\r\n  withApolloClient,\r\n  withUserData\r\n)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}