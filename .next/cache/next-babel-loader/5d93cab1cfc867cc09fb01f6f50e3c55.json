{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport * as React from \"react\";\nimport { Field } from \"formik\";\nimport * as Bootstrap from \"react-bootstrap\";\nvar Fragment = React.Fragment;\n\nvar Input = function Input(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      errors = _ref.errors,\n      touched = _ref.touched,\n      _ref$isPassword = _ref.isPassword,\n      isPassword = _ref$isPassword === void 0 ? false : _ref$isPassword;\n  return React.createElement(\"div\", {\n    className: \"form-group\"\n  }, React.createElement(Field, {\n    name: name,\n    render: function render(_ref2) {\n      var field = _ref2.field;\n      return React.createElement(Fragment, null, React.createElement(\"label\", {\n        htmlFor: name\n      }, label), React.createElement(Bootstrap.FormControl, _extends({\n        type: isPassword ? \"password\" : \"text\"\n      }, field, {\n        isInvalid: !!errors[name] && touched[name],\n        isValid: !!!errors[name] && touched[name]\n      })));\n    }\n  }), errors[name] && touched[name] ? React.createElement(Bootstrap.Form.Control.Feedback, {\n    type: \"invalid\"\n  }, errors[name]) : null);\n};\n\nexport default Input;","map":{"version":3,"sources":["D:\\Projeler\\na_brno_dobry\\components\\Input\\index.tsx"],"names":["React","Field","Bootstrap","Fragment","Input","name","label","errors","touched","isPassword","field"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAkC,QAAlC;AACA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B;IAIQC,Q,GAAaH,K,CAAbG,Q;;AAUR,IAAMC,KAA6B,GAAG,SAAhCA,KAAgC,OAMhC;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,6BADJC,UACI;AAAA,MADJA,UACI,gCADS,KACT;AACJ,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,MAAM,EAAE;AAAA,UACNK,KADM,SACNA,KADM;AAAA,aAGN,oBAAC,QAAD,QACE;AAAO,QAAA,OAAO,EAAEL;AAAhB,SAAuBC,KAAvB,CADF,EAEE,oBAAC,SAAD,CAAW,WAAX;AACE,QAAA,IAAI,EAAEG,UAAU,GAAG,UAAH,GAAgB;AADlC,SAEMC,KAFN;AAGE,QAAA,SAAS,EAAE,CAAC,CAACH,MAAM,CAACF,IAAD,CAAR,IAAkBG,OAAO,CAACH,IAAD,CAHtC;AAIE,QAAA,OAAO,EAAE,CAAC,CAAC,CAACE,MAAM,CAACF,IAAD,CAAT,IAAmBG,OAAO,CAACH,IAAD;AAJrC,SAFF,CAHM;AAAA;AAFV,IADF,EAiBGE,MAAM,CAACF,IAAD,CAAN,IAAgBG,OAAO,CAACH,IAAD,CAAvB,GACC,oBAAC,SAAD,CAAW,IAAX,CAAgB,OAAhB,CAAwB,QAAxB;AAAiC,IAAA,IAAI,EAAC;AAAtC,KACGE,MAAM,CAACF,IAAD,CADT,CADD,GAIG,IArBN,CADF;AAyBD,CAhCD;;AAkCA,eAAeD,KAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Field, FieldProps } from \"formik\";\r\nimport * as Bootstrap from \"react-bootstrap\";\r\n\r\nimport { ILoginFormValues, INewProductValues } from \"./types\";\r\n\r\nconst { Fragment } = React;\r\n\r\nexport interface IInputProps {\r\n  name: string;\r\n  label: string;\r\n  errors: any;\r\n  touched: any;\r\n  isPassword?: boolean;\r\n}\r\n\r\nconst Input: React.SFC<IInputProps> = ({\r\n  name,\r\n  label,\r\n  errors,\r\n  touched,\r\n  isPassword = false\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <Field\r\n        name={name}\r\n        render={({\r\n          field\r\n        }: FieldProps<ILoginFormValues | INewProductValues>) => (\r\n          <Fragment>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Bootstrap.FormControl\r\n              type={isPassword ? \"password\" : \"text\"}\r\n              {...field}\r\n              isInvalid={!!errors[name] && touched[name]}\r\n              isValid={!!!errors[name] && touched[name]}\r\n            />\r\n          </Fragment>\r\n        )}\r\n      />\r\n      {errors[name] && touched[name] ? (\r\n        <Bootstrap.Form.Control.Feedback type='invalid'>\r\n          {errors[name]}\r\n        </Bootstrap.Form.Control.Feedback>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}