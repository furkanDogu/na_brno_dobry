{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { removeCurrentUser } from \"../../services/authService\";\nvar Refs = [\"/products\", \"/changePassword\"];\n\nvar Header = function Header(_ref) {\n  var router = _ref.router,\n      client = _ref.client;\n  var currentPath = router.route;\n\n  var shouldRenderHeader = function shouldRenderHeader() {\n    var page = currentPath.split(\"/\")[1];\n    return Refs.indexOf(\"/\" + page) !== -1;\n  };\n\n  var setActiveLink = function setActiveLink(ref) {\n    return ref === currentPath ? \"nav-link active\" : \"nav-link\";\n  };\n\n  var logOut =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(client) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              removeCurrentUser();\n              _context.next = 3;\n              return client.cache.reset();\n\n            case 3:\n              router.push(\"/login/graphql\", \"/login\");\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function logOut(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(React.Fragment, null, shouldRenderHeader() && React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\"\n  }, React.createElement(Link, {\n    href: \"/products\",\n    as: \"/\"\n  }, React.createElement(\"a\", {\n    className: \"navbar-brand\"\n  }, \"Na Brno Dobry\")), currentPath !== \"/login/graphql\" && React.createElement(Nav, null, React.createElement(Link, {\n    href: Refs[0],\n    as: \"/\"\n  }, React.createElement(\"a\", {\n    className: setActiveLink(Refs[0])\n  }, \"Products\")), React.createElement(Link, {\n    href: Refs[1],\n    as: \"/changePassword\"\n  }, React.createElement(\"a\", {\n    className: setActiveLink(Refs[1])\n  }, \"Change password\")), React.createElement(\"span\", {\n    className: \"nav-link\",\n    onClick: function onClick() {\n      return logOut(client);\n    }\n  }, \"Log out\"))));\n};\n\nexport default Header;","map":{"version":3,"sources":["D:\\Projeler\\na_brno_dobry\\components\\Header\\index.tsx"],"names":["React","Navbar","Nav","Link","removeCurrentUser","Refs","Header","router","client","currentPath","route","shouldRenderHeader","page","split","indexOf","setActiveLink","ref","logOut","cache","reset","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAASC,iBAAT,QAAkC,4BAAlC;AAQA,IAAMC,IAAI,GAAG,CAAC,WAAD,EAAc,iBAAd,CAAb;;AAEA,IAAMC,MAA+B,GAAG,SAAlCA,MAAkC,OAAwB;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAAA,MAC/CC,WAD+C,GAC/BF,MAD+B,CACtDG,KADsD;;AAG9D,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAMC,IAAI,GAAGH,WAAW,CAACI,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAb;AACA,WAAOR,IAAI,CAACS,OAAL,CAAa,MAAMF,IAAnB,MAA6B,CAAC,CAArC;AACD,GAHD;;AAKA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAiB;AACrC,WAAOA,GAAG,KAAKP,WAAR,GAAsB,iBAAtB,GAA0C,UAAjD;AACD,GAFD;;AAIA,MAAMQ,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOT,MAAP;AAAA;AAAA;AAAA;AAAA;AACbJ,cAAAA,iBAAiB;AADJ;AAAA,qBAEPI,MAAM,CAACU,KAAP,CAAaC,KAAb,EAFO;;AAAA;AAGbZ,cAAAA,MAAM,CAACa,IAAP,CAAY,gBAAZ,EAA8B,QAA9B;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANH,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAMA,SACE,0CACGN,kBAAkB,MACjB,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC;AAA1B,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,WAAX;AAAuB,IAAA,EAAE,EAAC;AAA1B,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,qBADF,CADF,EAIGF,WAAW,KAAK,gBAAhB,IACC,oBAAC,GAAD,QACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,IAAI,CAAC,CAAD,CAAhB;AAAqB,IAAA,EAAE,EAAC;AAAxB,KACE;AAAG,IAAA,SAAS,EAAEU,aAAa,CAACV,IAAI,CAAC,CAAD,CAAL;AAA3B,gBADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAhB;AAAqB,IAAA,EAAE,EAAC;AAAxB,KACE;AAAG,IAAA,SAAS,EAAEU,aAAa,CAACV,IAAI,CAAC,CAAD,CAAL;AAA3B,uBADF,CAJF,EAOE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,OAAO,EAAE;AAAA,aAAMY,MAAM,CAACT,MAAD,CAAZ;AAAA;AAApC,eAPF,CALJ,CAFJ,CADF;AAwBD,CA1CD;;AA4CA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport { Router } from \"next/router\";\r\n\r\nimport { removeCurrentUser } from \"../../services/authService\";\r\nimport { ApolloClient } from \"apollo-client\";\r\n\r\ninterface IHeaderProps {\r\n  router: Router;\r\n  client: ApolloClient<any>;\r\n}\r\n\r\nconst Refs = [\"/products\", \"/changePassword\"];\r\n\r\nconst Header: React.SFC<IHeaderProps> = ({ router, client }) => {\r\n  const { route: currentPath } = router;\r\n\r\n  const shouldRenderHeader = () => {\r\n    const page = currentPath.split(\"/\")[1];\r\n    return Refs.indexOf(\"/\" + page) !== -1;\r\n  };\r\n\r\n  const setActiveLink = (ref: string) => {\r\n    return ref === currentPath ? \"nav-link active\" : \"nav-link\";\r\n  };\r\n\r\n  const logOut = async (client: ApolloClient<any>) => {\r\n    removeCurrentUser();\r\n    await client.cache.reset();\r\n    router.push(\"/login/graphql\", \"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {shouldRenderHeader() && (\r\n        <Navbar bg='dark' variant='dark'>\r\n          <Link href='/products' as='/'>\r\n            <a className='navbar-brand'>Na Brno Dobry</a>\r\n          </Link>\r\n          {currentPath !== \"/login/graphql\" && (\r\n            <Nav>\r\n              <Link href={Refs[0]} as='/'>\r\n                <a className={setActiveLink(Refs[0])}>Products</a>\r\n              </Link>\r\n              <Link href={Refs[1]} as='/changePassword'>\r\n                <a className={setActiveLink(Refs[1])}>Change password</a>\r\n              </Link>\r\n              <span className='nav-link' onClick={() => logOut(client)}>\r\n                Log out\r\n              </span>\r\n            </Nav>\r\n          )}\r\n        </Navbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}